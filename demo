<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Smart Plant Monitor Dashboard</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Inter', Arial, sans-serif;
      background: #f0f2f5;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      color: #1a1a1a;
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
    }

    .header {
      background: white;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      margin-bottom: 24px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .header h1 {
      font-size: 24px;
      font-weight: 600;
      color: #1a1a1a;
      margin: 0;
    }

    .status-indicator {
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 8px 16px;
      background: #e8f5e9;
      border-radius: 20px;
      font-size: 14px;
      color: #2e7d32;
    }

    .status-indicator.offline {
      background: #ffebee;
      color: #c62828;
    }

    .status-dot {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: #2e7d32;
    }

    .status-dot.offline {
      background: #c62828;
    }

    .dashboard-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 24px;
      margin-bottom: 24px;
    }

    .card {
      background: white;
      border-radius: 12px;
      padding: 24px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 16px;
    }

    .card-title {
      font-size: 16px;
      font-weight: 500;
      color: #666;
    }

    .card-value {
      font-size: 32px;
      font-weight: 600;
      color: #1a1a1a;
      margin-bottom: 8px;
    }

    .card-unit {
      font-size: 14px;
      color: #666;
    }

    .card-footer {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 14px;
      color: #666;
    }

    .trend-up {
      color: #2e7d32;
    }

    .trend-down {
      color: #c62828;
    }

    .charts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
      gap: 24px;
    }

    .chart-card {
      background: white;
      border-radius: 12px;
      padding: 24px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .chart-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .chart-title {
      font-size: 18px;
      font-weight: 500;
      color: #1a1a1a;
    }

    .chart-legend {
      display: flex;
      gap: 16px;
    }

    .legend-item {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 14px;
      color: #666;
    }

    .legend-color {
      width: 12px;
      height: 12px;
      border-radius: 3px;
    }

    .sensor-status {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
      margin-top: 16px;
    }

    .status-badge {
      display: flex;
      align-items: center;
      gap: 6px;
      padding: 6px 12px;
      background: #f5f5f5;
      border-radius: 16px;
      font-size: 13px;
      color: #666;
    }

    .status-badge.active {
      background: #e8f5e9;
      color: #2e7d32;
    }

    .status-badge.inactive {
      background: #ffebee;
      color: #c62828;
    }

    @media (max-width: 768px) {
      .container {
        padding: 12px;
      }
      
      .charts-grid {
        grid-template-columns: 1fr;
      }
      
      .card {
        padding: 16px;
      }
      
      .card-value {
        font-size: 24px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Smart Plant Monitor Dashboard</h1>
      <div class="status-indicator" id="connectionStatus">
        <div class="status-dot"></div>
        <span>Connected</span>
      </div>
    </div>

    <div class="dashboard-grid">
      <div class="card">
        <div class="card-header">
          <span class="card-title">Temperature</span>
          <i class="fas fa-temperature-high"></i>
        </div>
        <div class="card-value" id="temp">--</div>
        <div class="card-unit">°C</div>
        <div class="card-footer">
          <span class="trend-up">↑ 2.5°C</span>
          <span>from last reading</span>
        </div>
      </div>

      <div class="card">
        <div class="card-header">
          <span class="card-title">Soil Moisture</span>
          <i class="fas fa-seedling"></i>
        </div>
        <div class="card-value" id="soilM">--</div>
        <div class="card-unit">%</div>
        <div class="card-footer">
          <span class="trend-down">↓ 5%</span>
          <span>from last reading</span>
        </div>
      </div>

      <div class="card">
        <div class="card-header">
          <span class="card-title">Humidity</span>
          <i class="fas fa-tint"></i>
        </div>
        <div class="card-value" id="humid">--</div>
        <div class="card-unit">%</div>
        <div class="card-footer">
          <span class="trend-up">↑ 3%</span>
          <span>from last reading</span>
        </div>
      </div>

      <div class="card">
        <div class="card-header">
          <span class="card-title">Light Level</span>
          <i class="fas fa-sun"></i>
        </div>
        <div class="card-value" id="lightLvl">--</div>
        <div class="card-unit">lux</div>
        <div class="card-footer">
          <span class="trend-up">↑ 200 lux</span>
          <span>from last reading</span>
        </div>
      </div>
    </div>

    <div class="charts-grid">
      <div class="chart-card">
        <div class="chart-header">
          <div class="chart-title">Environmental Data</div>
          <div class="chart-legend">
            <div class="legend-item">
              <div class="legend-color" style="background: #2980b9;"></div>
              <span>Temperature</span>
            </div>
            <div class="legend-item">
              <div class="legend-color" style="background: #27ae60;"></div>
              <span>Humidity</span>
            </div>
          </div>
        </div>
        <canvas id="envChart"></canvas>
        <div class="sensor-status">
          <div class="status-badge active">
            <i class="fas fa-check-circle"></i>
            <span>Temperature Sensor Active</span>
          </div>
          <div class="status-badge active">
            <i class="fas fa-check-circle"></i>
            <span>Humidity Sensor Active</span>
          </div>
        </div>
      </div>

      <div class="chart-card">
        <div class="chart-header">
          <div class="chart-title">Soil & Light Data</div>
          <div class="chart-legend">
            <div class="legend-item">
              <div class="legend-color" style="background: #8e44ad;"></div>
              <span>Soil Moisture</span>
            </div>
            <div class="legend-item">
              <div class="legend-color" style="background: #f1c40f;"></div>
              <span>Light Level</span>
            </div>
          </div>
        </div>
        <canvas id="soilChart"></canvas>
        <div class="sensor-status">
          <div class="status-badge active">
            <i class="fas fa-check-circle"></i>
            <span>Soil Sensor Active</span>
          </div>
          <div class="status-badge active">
            <i class="fas fa-check-circle"></i>
            <span>Light Sensor Active</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-database-compat.js"></script>
  <!-- Chart.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Font Awesome -->
  <!-- <script src="https://kit.fontawesome.com/your-code.js" crossorigin="anonymous"></script> -->

  <script>
    // Firebase config
    const firebaseConfig = {
      apiKey: "AIzaSyAoOO_yVaAUfwc_wBlVM5BClNqeKdvehMA",
      authDomain: "aitools-7593a.firebaseapp.com",
      databaseURL: "https://aitools-7593a-default-rtdb.firebaseio.com",
      projectId: "aitools-7593a",
      storageBucket: "aitools-7593a.firebasestorage.app",
      messagingSenderId: "14698939491",
      appId: "1:14698939491:web:3f5492e24a31c86f746456",
      measurementId: "G-WWTJPP89ZD"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const database = firebase.database();
    const sensorRef = database.ref('smartPlantMonitor');

    // Chart configurations
    const envChart = new Chart(document.getElementById('envChart'), {
      type: 'line',
      data: {
        labels: [],
        datasets: [
          {
            label: 'Temperature (°C)',
            data: [],
            borderColor: '#2980b9',
            backgroundColor: 'rgba(41, 128, 185, 0.1)',
            tension: 0.4,
            fill: true
          },
          {
            label: 'Humidity (%)',
            data: [],
            borderColor: '#27ae60',
            backgroundColor: 'rgba(39, 174, 96, 0.1)',
            tension: 0.4,
            fill: true
          }
        ]
      },
      options: {
        responsive: true,
        interaction: {
          intersect: false,
          mode: 'index'
        },
        plugins: {
          legend: {
            display: false
          }
        },
        scales: {
          y: {
            beginAtZero: false,
            grid: {
              color: 'rgba(0, 0, 0, 0.05)'
            }
          },
          x: {
            grid: {
              display: false
            }
          }
        }
      }
    });

    const soilChart = new Chart(document.getElementById('soilChart'), {
      type: 'line',
      data: {
        labels: [],
        datasets: [
          {
            label: 'Soil Moisture (%)',
            data: [],
            borderColor: '#8e44ad',
            backgroundColor: 'rgba(142, 68, 173, 0.1)',
            tension: 0.4,
            fill: true
          },
          {
            label: 'Light Level (lux)',
            data: [],
            borderColor: '#f1c40f',
            backgroundColor: 'rgba(241, 196, 15, 0.1)',
            tension: 0.4,
            fill: true
          }
        ]
      },
      options: {
        responsive: true,
        interaction: {
          intersect: false,
          mode: 'index'
        },
        plugins: {
          legend: {
            display: false
          }
        },
        scales: {
          y: {
            beginAtZero: false,
            grid: {
              color: 'rgba(0, 0, 0, 0.05)'
            }
          },
          x: {
            grid: {
              display: false
            }
          }
        }
      }
    });

    // Keep track of last values for trend calculation
    let lastValues = {};

    function updateValue(id, newValue, unit = '') {
      const el = document.getElementById(id);
      if (!el) return;

      const oldValue = parseFloat(el.textContent);
      const newValueNum = parseFloat(newValue);

      if (!isNaN(oldValue) && !isNaN(newValueNum)) {
        const diff = newValueNum - oldValue;
        const trendEl = el.parentElement.querySelector('.trend-up, .trend-down');
        if (trendEl) {
          trendEl.className = diff >= 0 ? 'trend-up' : 'trend-down';
          trendEl.textContent = `${diff >= 0 ? '↑' : '↓'} ${Math.abs(diff).toFixed(1)}${unit}`;
        }
      }

      el.textContent = newValue;
    }

    function updateCharts(data) {
      const timestamp = new Date().toLocaleTimeString();
      
      // Update Environmental Chart
      envChart.data.labels.push(timestamp);
      envChart.data.datasets[0].data.push(data.temp);
      envChart.data.datasets[1].data.push(data.humid);
      
      if (envChart.data.labels.length > 10) {
        envChart.data.labels.shift();
        envChart.data.datasets[0].data.shift();
        envChart.data.datasets[1].data.shift();
      }
      
      // Update Soil Chart
      soilChart.data.labels.push(timestamp);
      soilChart.data.datasets[0].data.push(data.soilM);
      soilChart.data.datasets[1].data.push(data.lightLvl);
      
      if (soilChart.data.labels.length > 10) {
        soilChart.data.labels.shift();
        soilChart.data.datasets[0].data.shift();
        soilChart.data.datasets[1].data.shift();
      }
      
      envChart.update();
      soilChart.update();
    }

    // Listen for real-time updates
    sensorRef.limitToLast(1).on('child_added', (snapshot) => {
      const data = snapshot.val();
      if (data) {
        // Update connection status
        const statusIndicator = document.getElementById('connectionStatus');
        statusIndicator.className = 'status-indicator';
        statusIndicator.querySelector('.status-dot').className = 'status-dot';
        statusIndicator.querySelector('span').textContent = 'Connected';

        // Update values
        updateValue('temp', data.temp ?? '--', '°C');
        updateValue('soilM', data.soilM ?? '--', '%');
        updateValue('humid', data.humid ?? '--', '%');
        updateValue('lightLvl', data.lightLvl ?? '--', ' lux');

        // Update charts
        updateCharts(data);
      }
    });

    // Handle disconnection
    sensorRef.onDisconnect().update({
      status: 'offline'
    });

    sensorRef.on('disconnect', () => {
      const statusIndicator = document.getElementById('connectionStatus');
      statusIndicator.className = 'status-indicator offline';
      statusIndicator.querySelector('.status-dot').className = 'status-dot offline';
      statusIndicator.querySelector('span').textContent = 'Disconnected';
    });
  </script>
</body>
</html>













































